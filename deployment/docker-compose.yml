services:
  invoice_web:
    image: ghcr.io/bdcomputing/zaito-invoicing-web:latest
    container_name: invoicing-web-app
    env_file:
      - .env
    ports:
      - $FRONTEND_PORT:80
    restart: always
    depends_on:
      - invoice_api
    networks:
      - app_network
    pull_policy: always
    
   # NEST SERVER
  invoice_api:
    image: ghcr.io/bdcomputing/zaito-invoicing-api:latest
    user: root
    container_name: api
    env_file:
      - .env
    ports:
      - $APP_PORT:$APP_PORT
    networks:
      - app_network

    restart: always
    depends_on:
      - redis
    command: npm run start:prod

  # REDIS
  redis:
    build:
      context: .
      dockerfile: Dockerfile.redis
    image: redis:7.2-alpine
    container_name: redis
    restart: always
    networks:
      - app_network
    user: root
    env_file:
      - .env
    ports:
      - $REDIS_PORT:$REDIS_PORT
    # Run the init script
    command: sh -c "redis-server --requirepass $REDIS_PASSWORD --port $REDIS_PORT" && "./redis-init.sh"
    # Run as privileged to allow the container to change the vm.overcommit_memory setting
    privileged: true
    volumes:
      - ./docker/data/redis:/data

  # REDIS INSIGHT
  redis_insight:
    image: redislabs/redisinsight:1.14.0
    user: root
    container_name: redis_insight
    restart: always
    ports:
      - 8001:8001
    volumes:
      - ./docker/data/redis_insight:/db
    networks:
      - app_network
    depends_on:
      - redis
   # MONGO DB
  mongodb:
    image: mongo:6-jammy
    ports:
      - '27017:27017'
    volumes:
      - database:/data/db
    networks:
      - app_network
# NETWORKS
networks:
  app_network:
    driver: bridge
# VOLUME CONFIG
volumes:
  redis:
    driver: local
  redis_insight_volume_data:
    driver: local
  database:
    driver: local